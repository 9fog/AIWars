<?xml version="1.0" encoding="utf-8"?>
<items:AView xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx" 
			 xmlns:items="view.items.*" xmlns:local="*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import model.vo.AItemVO;
			import model.vo.UnitVO;
			
			import view.SpaceMediator;
			
			protected var unit:*;
			private var _lookCircle:MovieClip = new MovieClip();
			private var _fireCircle:MovieClip = new MovieClip();

			
			override public function set vo(value:AItemVO):void
			{
				super.vo = value;
				
				//trace((vo as UnitVO).type.typeId);
				switch((vo as UnitVO).type.typeId)
				{
					case 1:
					{
						unit = recon;
						this.removeElement(tank);
						this.removeElement(artillery);
						this.removeElement(base);
						break;
					}
					case 2:
					{
						unit = tank;
						this.removeElement(recon);
						this.removeElement(artillery);
						this.removeElement(base);
						break;
					}
					case 3:
					{
						unit = artillery;
						this.removeElement(recon);
						this.removeElement(tank);
						this.removeElement(base);
						break;
					}	
					case 4:
					{
						unit = base;
						this.removeElement(recon);
						this.removeElement(tank);
						this.removeElement(artillery);
						break;
					}	
				}
				
				var mc:MovieClip = new MovieClip();
				mc.graphics.clear();
				mc.graphics.beginFill(_color,1);
				mc.graphics.drawRect(-unit.width/2,-unit.height/2,unit.width,unit.height);
				mc.graphics.endFill();
				unit.addChild(mc);
				mc.mask = unit.mc_mask;
				
				updateSector(_fireCircle, (vo as UnitVO).type.shotRangeMax, (vo as UnitVO).type.shotRangeMin, _color, 0.2);
			}
			
			override public function update(value:AItemVO):void
			{
				_vo = value;
				var item:UnitVO = vo as UnitVO;
				//trace("cr-",item.id, rotation, item.cannonRotation);
				
				unit.mc_cannon.rotation = item.initTurrt?item.cannonRotation-rotation:0;//item.fire? item.cannonRotation-rotation:0;
				if (item.fire)
					unit.mc_cannon.mc_fire.gotoAndPlay(1);
				if (item.hit)
				{
					unit.addChild(unit.mc_hit);
					unit.mc_hit.gotoAndPlay(1);
				}
				(unit.mc_cannon as MovieClip).visible = item.isArmed;
				if (unit.mc_mobile)
				{
					(unit.mc_mobile as MovieClip).gotoAndStop(item.isMobile?1:2);
				}
				
				
				
			}
			
			public function updateCircle(value:Boolean):void
			{
				_fireCircle.visible = value;
			}
			
						
			private function updateSector(c:MovieClip, radiusMax:int, radiusMin:int, color:int, alpha:Number):void
			{
				c.visible = false;
				radiusMax = radiusMax * SpaceMediator.SIZE;
				c.graphics.lineStyle(1,color,alpha,true,"normal",null,null,1);
				c.graphics.drawCircle(0,0,radiusMax);
				unit.addChild(c);
			}
		]]>
	</fx:Script>
	
	<local:Recon id="recon"/>
	<local:Tank id="tank"/>
	<local:Artillery id="artillery"/>
	<local:Base id="base"/>
</items:AView>
